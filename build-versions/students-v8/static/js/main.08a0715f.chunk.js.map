{"version":3,"sources":["components/Button/Button.js","components/ArticleTitleValidation/ArticleTitleValidation.js","components/Char/Char.js","components/Article/Article.js","data/articles-list-data.js","components/ArticlesList/ArticlesList.js","components/Title/Title.js","components/Student/Student.js","data/students-list-data.js","components/StudentsList/StudentsList.js","components/Subtitle/Subtitle.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onClick","click","style","backgroundColor","className","classes","join","text","ArticleTitleValidation","message","length","charAt","toUpperCase","Radium","colorList","display","padding","margin","border","character","textAlign","color","Math","floor","random","clicked","Article","useState","title","setTitle","titleClick","split","map","letter","index","splice","updatedText","deleteCharHandler","children","type","value","onChange","event","target","deleteHandler","articlesListData","id","ArticlesList","titleColor","setTitleColor","articles","setArticles","setClasses","changeTitleColor","useEffect","article","articleIndex","newArticlesList","deleteArticleHandler","Title","min","max","firstName","lastName","course","email","ceil","toggleColorClick","studentsListData","StudentsList","blackText","setBlackText","showStudents","setShowStudents","students","toggleColor","student","Subtitle","lengthValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08a0715f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button \r\n      onClick={props.click}\r\n      style={{ backgroundColor: props.backgroundColor }}\r\n      className={props.classes ? props.classes.join(' ') : ''}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst ArticleTitleValidation = (props) => {\r\n    let message = '';\r\n\r\n    if (props.text.length === 0) {\r\n        message = 'Please add a text in the input!';\r\n    } else if (props.text.charAt(0) !== props.text.charAt(0).toUpperCase()) {\r\n        message = 'First letter needs to be uppercase!';\r\n    } else if (props.text.length < 5) {\r\n        message = 'The text is too short!';\r\n    } else if (props.text.length > 10) {\r\n        message = 'The text is too long!';\r\n    }\r\n\r\n    return (\r\n        <h3 className=\"error-message\">{message}</h3>\r\n    )\r\n}\r\n\r\nexport default ArticleTitleValidation;","import React from 'react';\r\nimport Radium from 'radium';\r\n\r\nconst Char = (props) => {\r\n    const colorList = ['#FF7F50', '#556B2F', '#9400D3', '#FF00FF', '#7CFC00', '#8B008B', '#FF1493'];\r\n    const style = {\r\n        display: 'inline-block',\r\n        padding: '16px',\r\n        margin: '16px',\r\n        border: props.character !== ' ' ? '1px solid black' : 'none',\r\n        textAlign: 'center',\r\n        color: colorList[Math.floor(Math.random() * colorList.length)],\r\n        ':hover': {\r\n            backgroundColor: 'lighgreen',\r\n            color: 'black'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div \r\n            style={style}\r\n            onClick={props.clicked}\r\n        >\r\n            {props.character}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Radium(Char); // higher order component","import React, { useState } from 'react';\r\nimport Button from '../Button/Button.js';\r\nimport ArticleTitleValidation from '../ArticleTitleValidation/ArticleTitleValidation.js';\r\nimport Char from '../Char/Char.js';\r\n\r\nconst Article = (props) => {\r\n    const [title, setTitle] = useState(props.title);\r\n\r\n    const onTitleInputChange = (event) => {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    const deleteCharHandler = (index) => {\r\n        const text = title.split('');\r\n        text.splice(index, 1);\r\n        const updatedText = text.join('');\r\n        setTitle(updatedText);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card full-width\">\r\n            <h1 \r\n                onClick={props.titleClick} \r\n                style={{ color: props.color }}>\r\n                {title.split('').map((letter, index) => \r\n                    <Char \r\n                        key={letter + index}\r\n                        character={letter} \r\n                        clicked={() => deleteCharHandler(index)}\r\n                    />\r\n                )}\r\n            </h1>\r\n\r\n            <p>{props.children}</p>\r\n\r\n            <p><strong>You can change the article title here:</strong></p>\r\n\r\n            <input type=\"text\" value={title} onChange={onTitleInputChange} />\r\n\r\n            <ArticleTitleValidation text={title} />\r\n\r\n            <Button \r\n                click={props.deleteHandler}\r\n                text=\"Delete article\"\r\n                classes={props.classes}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Article;\r\n  ","const articlesListData = [\r\n    {\r\n        id: 1,\r\n        text: 'Pharagraph 1',\r\n        title: 'Title 1',\r\n        color: 'green'\r\n    },\r\n    {\r\n        id: 2,\r\n        text: 'Pharagraph 2',\r\n        title: 'Title 2',\r\n        color: 'yellow'\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'Pharagraph 3',\r\n        title: 'Title 3',\r\n        color: 'purple'\r\n    },\r\n    {\r\n        id: 4,\r\n        text: 'Pharagraph 4',\r\n        title: 'Title 4',\r\n        color: 'red'\r\n    }\r\n];\r\n\r\nexport default articlesListData;","import React, { useEffect, useState } from 'react';\r\nimport Article from '../Article/Article';\r\nimport Button from '../Button/Button';\r\nimport articlesListData from '../../data/articles-list-data';\r\n\r\nconst ArticlesList = () => {\r\n    const [titleColor, setTitleColor] = useState('black');\r\n    const [articles, setArticles] = useState(articlesListData);\r\n    const [classes, setClasses] = useState([]);\r\n    \r\n    const changeTitleColor = (color) => {\r\n        setTitleColor(color);\r\n    }\r\n\r\n    const deleteArticleHandler = (articleIndex) => {\r\n        // v1\r\n        // articles.splice(articleIndex, 1);\r\n        // setArticles([...articles]); // Whe changed the array values but it's still the same array and React doesn't see any reasons to re-render because state\r\n                                    // hasn't changed, the new array is the old array. One easy way to avoid this is by spreading the array into a new array\r\n                                    // using the \"...\" operator\r\n\r\n        // v2\r\n        // const newArticles = articles.slice(); // slice without arguments creates a new copy of the array \r\n        // newArticles.splice(articleIndex, 1);\r\n        // setArticles(newArticles);\r\n\r\n        // v3\r\n        const newArticlesList = [...articles];   // spread operator - create a new array from another array\r\n        newArticlesList.splice(articleIndex, 1); // we need to create a copy of the old array, change that and then update the state with the new array (after we made\r\n        setArticles(newArticlesList);            // also the changes in the new array)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (articles.length === 2) {\r\n            setClasses([...classes, 'red']);\r\n        }\r\n        if (articles.length === 1) {\r\n            setClasses([...classes, 'bold']);\r\n        }\r\n    }, [articles.length]);\r\n\r\n    return (\r\n        <div className=\"articles\">\r\n            <Button \r\n                click={() => changeTitleColor('red')}\r\n                text=\"Change color to red\"\r\n            />\r\n\r\n            {\r\n                articles.map((article, index) => (\r\n                    <Article\r\n                        key={article.id}\r\n                        title={article.title}\r\n                        color={titleColor}\r\n                        titleClick={() => changeTitleColor(article.color)}\r\n                        deleteHandler={() => deleteArticleHandler(index)}\r\n                        classes={classes}\r\n                    >\r\n                        {article.text}\r\n                    </Article>\r\n                ))\r\n            }   \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default ArticlesList;","import React from 'react';\r\n\r\nconst Title = (props) => {\r\n  return (\r\n    <div className=\"title\">\r\n      {props.text}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport Radium, { StyleRoot } from 'radium';\r\nimport styled from 'styled-components';\r\n\r\nconst Student = (props) => {\r\n    const cardStyle = {\r\n        '@media (max-width: 1000px)': {\r\n            backgroundColor: 'lightgray'\r\n        }\r\n    };\r\n\r\n    const getRandomAge = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1) + min); \r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"card\"\r\n            style={cardStyle}\r\n        >\r\n            <h1 style={{ color: props.color }}>\r\n                {props.firstName} {props.lastName}\r\n            </h1>\r\n            <h3><strong>Course:</strong> {props.course}</h3>\r\n            <p><strong>Email:</strong> {props.email}</p>\r\n            <p><strong>Age:</strong> {getRandomAge(18, 99)}</p>\r\n            <Button \r\n                click={props.toggleColorClick} \r\n                text=\"Trigger color\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Radium(Student);\r\n  ","const studentsListData = [\r\n    {\r\n        id: 1,\r\n        firstName: 'Martin',\r\n        lastName: 'Randolph',\r\n        course: 'Frontend',\r\n        email: 'martin.randolph@gmail.com',\r\n        color: 'green'\r\n    },\r\n    {\r\n        id: 2,\r\n        firstName: 'Kieron',\r\n        lastName: 'Dotson',\r\n        course: 'Frontend',\r\n        email: 'Kieron.Dotson@gmail.com',\r\n        color: 'red'\r\n    },\r\n    {\r\n        id: 3,\r\n        firstName: 'Martin',\r\n        lastName: 'Randolph',\r\n        course: 'Frontend',\r\n        email: 'martin.randolph@gmail.com',\r\n        color: 'green'\r\n    },\r\n    {\r\n        id: 4,\r\n        firstName: 'Zack',\r\n        lastName: 'John',\r\n        course: 'Backend',\r\n        email: 'Zack.John@gmail.com',\r\n        color: 'yellow'\r\n    },\r\n    {\r\n        id: 5,\r\n        firstName: 'Maximillian',\r\n        lastName: 'Jacobson',\r\n        course: 'Backend',\r\n        email: 'Maximillian.Jacobson@gmail.com',\r\n        color: 'purple'\r\n    },\r\n    {\r\n        id: 6,\r\n        firstName: 'Popescu',\r\n        lastName: 'Gheorghe',\r\n        course: 'Backend',\r\n        email: 'gheorghe@yahoo.com',\r\n        color: 'lightblue'\r\n    }\r\n];\r\n\r\nexport default studentsListData;","import React, { useState } from 'react';\r\nimport Student from '../Student/Student';\r\nimport studentsListData from '../../data/students-list-data';\r\nimport Button from '../Button/Button';\r\n\r\nconst StudentsList = () => {\r\n    const [blackText, setBlackText] = useState(false);\r\n    const [showStudents, setShowStudents] = useState(false);\r\n    let students = null;\r\n\r\n    const toggleColor = () => {\r\n        setBlackText(!blackText);\r\n    }\r\n\r\n    const handleClickToggleShowStudents = () => {\r\n        setShowStudents(!showStudents);\r\n    }\r\n\r\n    if (showStudents) {\r\n        students = studentsListData.map((student) => (\r\n            <Student\r\n                key={student.id}\r\n                firstName={student.firstName} \r\n                lastName={student.lastName} \r\n                course={student.course} \r\n                email={student.email}\r\n                color={!blackText ? student.color : 'black'} \r\n                toggleColorClick={toggleColor} />\r\n        ));\r\n    } else {\r\n        students = null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                click={toggleColor} \r\n                text=\"Trigger color\"\r\n            />\r\n            <Button \r\n                click={handleClickToggleShowStudents} \r\n                text={showStudents ? \"Hide students\" : \"Show students\"}\r\n                backgroundColor={showStudents ? \"green\" : \"red\"}\r\n            />\r\n            {students}\r\n        </>\r\n    );\r\n}\r\n  \r\nexport default StudentsList;","import React from 'react';\r\n\r\nconst Subtitle = (props) => {\r\n  return (\r\n    <div className=\"title sub-title\">\r\n      {props.text} {props.lengthValue}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subtitle;\r\n","import React from 'react';\nimport './App.css';\nimport ArticlesList from './components/ArticlesList/ArticlesList';\nimport Title from './components/Title/Title';\nimport StudentsList from './components/StudentsList/StudentsList';\nimport Subtitle from './components/Subtitle/Subtitle';\nimport studentsListData from './data/students-list-data';\nimport Radium, { StyleRoot } from 'radium';\n\nconst App = () => {\n  return (\n    <StyleRoot>\n      <Title text=\"Students\" />\n      <Subtitle text=\"Number of students:\" lengthValue={studentsListData.length} />\n      <StudentsList />\n      <Title text=\"Blog articles\" />\n      <ArticlesList />\n    </StyleRoot>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}