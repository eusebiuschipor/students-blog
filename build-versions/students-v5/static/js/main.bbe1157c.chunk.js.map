{"version":3,"sources":["components/Button/Button.js","components/Article/Article.js","data/articles-list-data.js","components/ArticlesList/ArticlesList.js","components/Title/Title.js","components/Student/Student.js","data/students-list-data.js","components/StudentsList/StudentsList.js","components/Subtitle/Subtitle.js","App.js","reportWebVitals.js","index.js"],"names":["ToggleColorButton","props","onClick","click","text","Article","useState","title","setTitle","className","titleClick","style","color","children","type","value","onChange","event","target","Button","deleteHandler","articlesListData","id","ArticlesList","titleColor","setTitleColor","articles","setArticles","changeTitleColor","map","article","index","articleIndex","newArticlesList","splice","deleteArticleHandler","Title","Student","min","max","firstName","lastName","course","email","Math","ceil","floor","random","toggleColorClick","studentsListData","StudentsList","blackText","setBlackText","showStudents","setShowStudents","students","toggleColor","student","Subtitle","lengthValue","App","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbe1157c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ToggleColorButton = (props) => {\r\n  return (\r\n    <button onClick={props.click}>\r\n      {props.text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ToggleColorButton;\r\n","import React, { useState } from 'react';\r\nimport Button from '../Button/Button.js';\r\n\r\nconst Article = (props) => {\r\n    const [title, setTitle] = useState(props.title);\r\n\r\n    const onTitleInputChange = (event) => {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card full-width\">\r\n            <h1 \r\n                onClick={props.titleClick} \r\n                style={{ color: props.color }}>\r\n                {title}\r\n            </h1>\r\n            <p>{props.children}</p>\r\n            <p><strong>You can change the article title here:</strong></p>\r\n            <input type=\"text\" value={title} onChange={onTitleInputChange} />\r\n            <Button \r\n                click={props.deleteHandler}\r\n                text=\"Delete article\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Article;\r\n  ","const articlesListData = [\r\n    {\r\n        id: 1,\r\n        text: 'Pharagraph 1',\r\n        title: 'Title 1',\r\n        color: 'green'\r\n    },\r\n    {\r\n        id: 2,\r\n        text: 'Pharagraph 2',\r\n        title: 'Title 2',\r\n        color: 'yellow'\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'Pharagraph 3',\r\n        title: 'Title 3',\r\n        color: 'purple'\r\n    },\r\n    {\r\n        id: 4,\r\n        text: 'Pharagraph 4',\r\n        title: 'Title 4',\r\n        color: 'red'\r\n    }\r\n];\r\n\r\nexport default articlesListData;","import React, { useState } from 'react';\r\nimport Article from '../Article/Article';\r\nimport Button from '../Button/Button';\r\nimport articlesListData from '../../data/articles-list-data';\r\n\r\nconst ArticlesList = () => {\r\n    const [titleColor, setTitleColor] = useState('black');\r\n    const [articles, setArticles] = useState(articlesListData);\r\n    \r\n    const changeTitleColor = (color) => {\r\n        setTitleColor(color);\r\n    }\r\n\r\n    const deleteArticleHandler = (articleIndex) => {\r\n        // v1\r\n        // articles.splice(articleIndex, 1);\r\n        // setArticles([...articles]); // Whe changed the array values but it's still the same array and React doesn't see any reasons to re-render because state\r\n                                    // hasn't changed, the new array is the old array. One easy way to avoid this is by spreading the array into a new array\r\n                                    // using the \"...\" operator\r\n\r\n        // v2\r\n        // const newArticles = articles.slice(); // slice without arguments creates a new copy of the array \r\n        // newArticles.splice(articleIndex, 1);\r\n        // setArticles(newArticles);\r\n\r\n        // v3\r\n        const newArticlesList = [...articles];   // spread operator - create a new array from another array\r\n        newArticlesList.splice(articleIndex, 1); // we need to create a copy of the old array, change that and then update the state with the new array (after we made\r\n        setArticles(newArticlesList);            // also the changes in the new array)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"articles\">\r\n            <Button \r\n                click={() => changeTitleColor('red')}\r\n                text=\"Change color to red\"\r\n            />\r\n\r\n            {\r\n                articles.map((article, index) => (\r\n                    <Article\r\n                        key={article.id}\r\n                        title={article.title}\r\n                        color={titleColor}\r\n                        titleClick={() => changeTitleColor(article.color)}\r\n                        deleteHandler={() => deleteArticleHandler(index)}\r\n                    >\r\n                        {article.text}\r\n                    </Article>\r\n                ))\r\n            }   \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default ArticlesList;","import React from 'react';\r\n\r\nconst Title = (props) => {\r\n  return (\r\n    <div className=\"title\">\r\n      {props.text}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nconst Student = (props) => {\r\n\r\n    const getRandomAge = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1) + min); \r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <h1 style={{ color: props.color }}>\r\n                {props.firstName} {props.lastName}\r\n            </h1>\r\n            <h3><strong>Course:</strong> {props.course}</h3>\r\n            <p><strong>Email:</strong> {props.email}</p>\r\n            <p><strong>Age:</strong> {getRandomAge(18, 99)}</p>\r\n            <Button \r\n                click={props.toggleColorClick} \r\n                text=\"Trigger color\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Student;\r\n  ","const studentsListData = [\r\n    {\r\n        id: 1,\r\n        firstName: 'Martin',\r\n        lastName: 'Randolph',\r\n        course: 'Frontend',\r\n        email: 'martin.randolph@gmail.com',\r\n        color: 'green'\r\n    },\r\n    {\r\n        id: 2,\r\n        firstName: 'Kieron',\r\n        lastName: 'Dotson',\r\n        course: 'Frontend',\r\n        email: 'Kieron.Dotson@gmail.com',\r\n        color: 'red'\r\n    },\r\n    {\r\n        id: 3,\r\n        firstName: 'Martin',\r\n        lastName: 'Randolph',\r\n        course: 'Frontend',\r\n        email: 'martin.randolph@gmail.com',\r\n        color: 'green'\r\n    },\r\n    {\r\n        id: 4,\r\n        firstName: 'Zack',\r\n        lastName: 'John',\r\n        course: 'Backend',\r\n        email: 'Zack.John@gmail.com',\r\n        color: 'yellow'\r\n    },\r\n    {\r\n        id: 5,\r\n        firstName: 'Maximillian',\r\n        lastName: 'Jacobson',\r\n        course: 'Backend',\r\n        email: 'Maximillian.Jacobson@gmail.com',\r\n        color: 'purple'\r\n    },\r\n    {\r\n        id: 6,\r\n        firstName: 'Popescu',\r\n        lastName: 'Gheorghe',\r\n        course: 'Backend',\r\n        email: 'gheorghe@yahoo.com',\r\n        color: 'lightblue'\r\n    }\r\n];\r\n\r\nexport default studentsListData;","import React, { useState } from 'react';\r\nimport Student from '../Student/Student';\r\nimport studentsListData from '../../data/students-list-data';\r\nimport Button from '../Button/Button';\r\n\r\nconst StudentsList = () => {\r\n    const [blackText, setBlackText] = useState(false);\r\n    const [showStudents, setShowStudents] = useState(false);\r\n    let students = null;\r\n\r\n    const toggleColor = () => {\r\n        setBlackText(!blackText);\r\n    }\r\n\r\n    const handleClickToggleShowStudents = () => {\r\n        setShowStudents(!showStudents);\r\n    }\r\n\r\n    if (showStudents) {\r\n        students = studentsListData.map((student) => (\r\n            <Student\r\n                key={student.id}\r\n                firstName={student.firstName} \r\n                lastName={student.lastName} \r\n                course={student.course} \r\n                email={student.email}\r\n                color={!blackText ? student.color : 'black'} \r\n                toggleColorClick={toggleColor} />\r\n        ));\r\n    } else {\r\n        students = null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                click={toggleColor} \r\n                text=\"Trigger color\"\r\n            />\r\n            <Button \r\n                click={handleClickToggleShowStudents} \r\n                text={showStudents ? \"Hide students\" : \"Show students\"}\r\n            />\r\n            {students}\r\n        </>\r\n    );\r\n}\r\n  \r\nexport default StudentsList;","import React from 'react';\r\n\r\nconst Subtitle = (props) => {\r\n  return (\r\n    <div className=\"title sub-title\">\r\n      {props.text} {props.lengthValue}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subtitle;\r\n","import React from 'react';\nimport './App.css';\nimport ArticlesList from './components/ArticlesList/ArticlesList';\nimport Title from './components/Title/Title';\nimport StudentsList from './components/StudentsList/StudentsList';\nimport Subtitle from './components/Subtitle/Subtitle';\nimport studentsListData from './data/students-list-data';\n\nconst App = () => {\n  return (\n    <>\n      <Title text=\"Students\" />\n      <Subtitle text=\"Number of students:\" lengthValue={studentsListData.length} />\n      <StudentsList />\n      <Title text=\"Blog articles\" />\n      <ArticlesList />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}